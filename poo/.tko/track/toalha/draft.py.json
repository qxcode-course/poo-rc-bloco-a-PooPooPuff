{
    "patches": [
        {
            "label": "2025-09-17_14-07-56",
            "content": "@@ -1,268 +0,0 @@\n-%0Aclass Towel:%0A    def __init__(self,color:str,size:str):%0A        self.color:str=color%0A        self.size:str=size%0A        self.wetness:int=0%0A%0Aprint(%22Qual a cor da sua toalha?%22)%0Acolor=input()%0Atowel: Towel= Towel(color, %22P%22)%0Aprint(f%22Sua toalha %C3%A9 %7Btowel.color%7D%22)%0A%0A        \n",
            "lines": "0"
        },
        {
            "label": "2025-09-17_14-44-55",
            "content": "@@ -1,8 +1,9 @@\n+%0A\n class To\n@@ -134,17 +134,16 @@\n :int=0%0A%0A\n-%0A\n print(%22Q\n@@ -187,33 +187,22 @@\n t()%0A\n-size=input()%0A\n towel:\n+ \n Towel=\n+ \n Towe\n@@ -209,20 +209,20 @@\n l(color,\n-size\n+ %22P%22\n )%0Aprint(\n@@ -251,8 +251,18 @@\n color%7D%22)\n+%0A%0A        \n",
            "lines": "13"
        },
        {
            "label": "2025-09-17_14-57-06",
            "content": "@@ -137,929 +137,133 @@\n =0%0A%0A\n-    def dry(self, amount: int)-%3ENone:%0A        self.wetness+=amount%0A        if self.wetness%3E=self.isMaxWetness():%0A            self.wetness=self.isMaxWetness()%0A            print(%22toalha ta ensopada ze%22)%0A%0A    def isMaxWetness(self)-%3Eint:%0A        if self.size==%22P%22:%0A            return 10%0A        if self.size==%22M%22:%0A            return 20%0A        if self.size==%22G%22:%0A            return 30%0A        return 0%0A        %0A    def __str__(self)-%3Estr:%0A        return f%22Color:%7Bself.color%7D, Size:%7Bself.size%7D, Wet:%7Bself.wetness%7D%22%0A%0Adef main():%0A    towel:Towel=Towel(%22%22,%22%22)%0A    while True:%0A        line: str=input()%0A        args:list%5Bstr%5D=line.split(%22 %22)%0A%0A        if args%5B0%5D==%22end%22:%0A            break%0A        elif args%5B0%5D==%22new%22:%0A            color:str=args%5B1%5D%0A            size:str=args%5B2%5D%0A            towel=Towel(color,size)%0A        elif args%5B0%5D==%22show%22:%0A            print(towel)%0A        else:%0A            print(%22fail: command not found%22)%0A%0Amain(\n+%0Aprint(%22Qual a cor da sua toalha?%22)%0Acolor=input()%0Asize=input()%0Atowel:Towel=Towel(color,size)%0Aprint(f%22Sua toalha %C3%A9 %7Btowel.color%7D%22\n )\n",
            "lines": "12"
        },
        {
            "label": "2025-09-23_14-08-16",
            "content": "@@ -840,13 +840,11 @@\n %5D==%22\n-criar\n+new\n %22:%0A \n@@ -964,15 +964,12 @@\n %5D==%22\n-mostrar\n+show\n %22:%0A \n",
            "lines": "42"
        },
        {
            "label": "2025-10-01_19-50-01",
            "content": "@@ -321,135 +321,25 @@\n lha \n-encharcada%22)%0A%0A    def isDry(self):%0A        return self.wetness==0%0A    %0A    def wringOut(self):%0A        self.wetness==0%0A        \n+ta ensopada ze%22)%0A\n %0A   \n@@ -588,16 +588,18 @@\n urn f%22Co\n+lo\n r:%7Bself.\n@@ -610,15 +610,12 @@\n r%7D, \n-Tamanho\n+Size\n :%7Bse\n@@ -628,15 +628,11 @@\n e%7D, \n-Umidade\n+Wet\n :%7Bse\n@@ -732,32 +732,8 @@\n t()%0A\n-        print(%22$%22+line)%0A\n     \n@@ -943,38 +943,8 @@\n ze)%0A\n-        elif args%5B0%5D==%22seca:%22%0A\n     \n",
            "lines": "42"
        },
        {
            "label": "2025-10-01_19-58-22",
            "content": "@@ -1111,232 +1111,9 @@\n ca:%22\n-:%0A            print(f%22sim%22 if towel.isDry() else %22nao%22)%0A        elif args%5B0%5D==%22torcer%22:%0A            towel.wringOut()%0A        elif args%5B0%5D==%22enxugar%22:%0A                amount:int=int(args%5B1%5D)%0A                towel.dry(amount)\n %0A\n+\n     \n@@ -1180,16 +1180,16 @@\n   else:%0A\n-\n         \n@@ -1225,14 +1225,15 @@\n found%22)%0A\n+%0A\n main()\n",
            "lines": "50"
        },
        {
            "label": "2025-10-01_20-00-43",
            "content": "@@ -32,45 +32,28 @@\n elf,\n- \n color:\n- \n str,\n- \n size:\n- \n str):\n- # construtor\n %0A   \n@@ -72,32 +72,17 @@\n lor:\n- \n str\n- = \n+=\n color\n- # atributos\n %0A   \n@@ -96,23 +96,20 @@\n lf.size:\n- \n str\n- = \n+=\n size%0A   \n@@ -130,21 +130,14 @@\n ess:\n- \n int\n- = 0%0A    \n+=0%0A\n %0A   \n@@ -163,20 +163,18 @@\n nt: int)\n- \n -%3E\n- \n None:%0A  \n@@ -195,12 +195,10 @@\n ness\n- \n +=\n- \n amou\n@@ -227,12 +227,10 @@\n ness\n- \n %3E=\n- \n self\n@@ -270,19 +270,17 @@\n .wetness\n- = \n+=\n self.isM\n@@ -383,14 +383,16 @@\n ness\n- \n ==\n- \n 0%0A\n+    \n %0A   \n@@ -436,13 +436,20 @@\n ness\n- = 0%0A\n+==0%0A        \n %0A   \n@@ -471,20 +471,18 @@\n ss(self)\n- \n -%3E\n- \n int:%0A   \n@@ -502,31 +502,14 @@\n size\n- \n ==\n- \n %22P%22:\n- # early return\n %0A   \n@@ -547,20 +547,18 @@\n elf.size\n- \n ==\n- \n %22M%22:%0A   \n@@ -596,20 +596,18 @@\n elf.size\n- \n ==\n- \n %22G%22:%0A   \n@@ -645,26 +645,17 @@\n rn 0\n- # default return%0A\n+%0A        \n %0A   \n@@ -676,27 +676,14 @@\n elf)\n- \n -%3E\n- \n str:\n- # toString\n %0A   \n@@ -700,17 +700,16 @@\n n f%22Cor:\n- \n %7Bself.co\n@@ -722,17 +722,16 @@\n Tamanho:\n- \n %7Bself.si\n@@ -743,17 +743,16 @@\n Umidade:\n- \n %7Bself.we\n@@ -771,17 +771,16 @@\n  main():\n- \n %0A    tow\n@@ -786,17 +786,14 @@\n wel:\n- \n Towel\n- = \n+=\n Towe\n@@ -801,87 +801,27 @@\n (%22%22,\n- \n %22%22)\n- # 2: criar um obj com qq valor inicial%0A    while True: # 3: loop infinito%0A\n+%0A    while True:\n %0A   \n@@ -838,44 +838,16 @@\n  str\n- = \n+=\n input()\n- # 4: perguntar ao usuario\n %0A   \n@@ -864,23 +864,14 @@\n (%22$%22\n- + \n++\n line)\n- # echo\n %0A   \n@@ -880,17 +880,16 @@\n    args:\n- \n list%5Bstr\n@@ -889,19 +889,17 @@\n ist%5Bstr%5D\n- = \n+=\n line.spl\n@@ -909,32 +909,8 @@\n %22 %22)\n- # 5: separar argumentos\n %0A%0A  \n@@ -925,20 +925,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22end%22:%0A \n@@ -976,20 +976,18 @@\n s%5B0%5D\n- \n ==\n- \n %22criar%22:\n  # c\n@@ -986,21 +986,8 @@\n ar%22:\n- # color size\n %0A   \n@@ -1001,23 +1001,20 @@\n   color:\n- \n str\n- = \n+=\n args%5B1%5D%0A\n@@ -1034,15 +1034,12 @@\n ize:\n- \n str\n- = \n+=\n args\n@@ -1059,19 +1059,17 @@\n    towel\n- = \n+=\n Towel(co\n@@ -1072,17 +1072,16 @@\n l(color,\n- \n size)%0A  \n@@ -1102,17 +1102,16 @@\n s%5B0%5D\n- \n ==\n- \n %22seca\n+:\n %22:%0A \n@@ -1127,16 +1127,17 @@\n   print(\n+f\n %22sim%22 if\n@@ -1183,20 +1183,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22torcer%22\n@@ -1244,20 +1244,18 @@\n  args%5B0%5D\n- \n ==\n- \n %22enxugar\n@@ -1273,22 +1273,23 @@\n     \n+    \n amount:\n- \n int\n- = \n+=\n int(\n@@ -1297,16 +1297,20 @@\n rgs%5B1%5D)%0A\n+    \n         \n@@ -1355,12 +1355,10 @@\n s%5B0%5D\n- \n ==\n- \n %22mos\n@@ -1406,18 +1406,8 @@\n lse:\n- # 7: erro\n %0A   \n@@ -1435,43 +1435,27 @@\n  com\n+m\n and\n-o\n  n\n-%C3%A3o encontrado\n+ot found\n %22)%0A\n-%0A\n main()\n- # passo 1\n",
            "lines": "55"
        },
        {
            "label": "2025-10-01_20-04-51",
            "content": "class Towel:\n    def __init__(self, color: str, size: str): # construtor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n    \n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha encharcada\")\n\n    def isDry(self):\n        return self.wetness == 0\n\n    def wringOut(self):\n        self.wetness = 0\n\n    def isMaxWetness(self) -> int:\n        if self.size == \"P\": # early return\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0 # default return\n\n    def __str__(self) -> str: # toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\ndef main(): \n    towel: Towel = Towel(\"\", \"\") # 2: criar um obj com qq valor inicial\n    while True: # 3: loop infinito\n\n        line: str = input() # 4: perguntar ao usuario\n        print(\"$\" + line) # echo\n        args: list[str] = line.split(\" \") # 5: separar argumentos\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"criar\": # color size\n            color: str = args[1]\n            size: str = args[2]\n            towel = Towel(color, size)\n        elif args[0] == \"seca\":\n            print(\"sim\" if towel.isDry() else \"nao\")\n        elif args[0] == \"torcer\":\n            towel.wringOut()\n        elif args[0] == \"enxugar\":\n            amount: int = int(args[1])\n            towel.dry(amount)\n        elif args[0] == \"mostrar\":\n            print(towel)\n        else: # 7: erro\n            print(\"fail: comando n\u00e3o encontrado\")\n\nmain() # passo 1",
            "lines": "57"
        }
    ]
}